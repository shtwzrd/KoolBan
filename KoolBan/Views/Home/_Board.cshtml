@using System.Collections
@using KoolBan.Models
<!-- ko with: board -->
<div class="jumbotron" style="margin: 0;">
    <div class="container">
        <div class="page-header"><h1 data_bind="valueWithInit: 'projectId'">@Model.ProjectId</h1></div>
        <input id="projectId" value=@Model.ProjectId style="visibility: hidden">
    </div>
</div>
<div class="jumbotron kanban" style="overflow-x: auto; width: 100%;">
    <!--    <div class="container table-responsive" style="overflow-x: auto; width: 100%;"> -->

    <table class="kanban-table">
        <thead>
            <tr>
                @foreach (var col in @Model.Columns)
                {
                    <th class="kanban columnhead">
                        <h3 class="kanban h3">
                            @col.ColumnName
                            @if (col.Capacity == null || col.Capacity > 0)
                            {
                                <small class="restriction">[@col.Notes.Count/<span class="limit">@col.Capacity</span>]</small>
                            }
                        </h3>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                @foreach (var col in @Model.Columns)
                {
                    IEnumerable<Note> list = col.Notes;
                    var sortedList = list.OrderBy(f => f.Description.Count()).Reverse();
                    <td class="kanban-table">
                        <div class="metro">


                            @foreach (var note in sortedList)
                            {
                                string size = "tile";

                                if (note.Description.Length < 40)
                                {
                                    size = "tile";
                                }
                                else if (note.Description.Length < 106)
                                {
                                    size = "tile double";
                                }
                                else
                                {
                                    size = "tile double double-vertical";
                                }
                                string color = "bg-dark" + note.NoteColor;
                                string ol = "ol-" + note.NoteColor.ToString().ToLower();
                                string olhex = Note.NoteColorToHex(note.NoteColor);


                                <div class="@size main @color @ol" style="-webkit-box-shadow: none; -ms-box-shadow: none; box-shadow: none;">
                                    <p>@note.Description</p>

                                    <div class="metro tile config ol-transparent">
                                        <a href="" class="glyphicon glyphicon-edit" style="font-family: 'Glyphicons Halflings'; color: @olhex;"></a>
                                    </div>

                                    <div class="metro tile logo ol-transparent">
                                        <span class="glyphicon-@note.Logo" style="font-family: 'Glyphicons Halflings'"></span>
                                    </div>
                                </div>
                            }
                        </div>
                    </td>
                }
        </tbody>
    </table>
</div>
<!--</div> -->
<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <h2>Your information</h2>
            <p>This section shows how you can call ASP.NET Web API to get the user details.</p>

            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=273732">Learn more &raquo;</a></p>
        </div>

        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>
                ASP.NET Single Page Application (SPA) helps you build applications that include significant client-side interactions using HTML, CSS, and JavaScript.
                It's now easier than ever before to getting started writing highly interactive web applications.
            </p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=273732">Learn more &raquo;</a></p>
        </div>

        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>
</div>

<!-- /ko -->
